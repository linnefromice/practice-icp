type CandidSlot0 = record {
    sqrt_price_x96: text;
    tick: int32;
    observation_index: nat16;
    observation_cardinality: nat16;
    observation_cardinality_next: nat16;
    fee_protocol: nat8;
    unlocked: bool;
};
type CandidObservation = record {
    block_timestamp: nat32;
    tick_cumulative: int64;
    liquidity_cumulative: text;
    initialized: bool;
};
type CandidPrice = record {
    sqrt_price_x96: text;
    observation_index: nat16;
    block_timestamp: nat32;
};
service : {
    "save_prices": (opt nat64, opt nat64) -> (variant { Ok : null; Err : text });
    "debug_get_slot0": (text, opt nat64, opt nat64) -> (variant { Ok : CandidSlot0; Err : text });
    "debug_get_observation": (text, nat16, opt nat64, opt nat64) -> (variant { Ok : CandidObservation; Err : text });
    "debug_get_prices_length": () -> (nat64);
    "debug_get_price": (nat64) -> (opt CandidPrice);
    "debug_last_price_timestamp_by_hour": () -> (nat32);
    "debug_last_price_timestamp_by_day": () -> (nat32);
    "debug_last_price_timestamp_by_five_minites": () -> (nat32);
    "debug_price_index": (nat32) -> (opt nat64);
}
