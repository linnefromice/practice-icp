type Env = variant { Production; Test; LocalDevelopment };
type InitError = variant {
  InvalidDestination : text;
  InvalidPrincipal : principal;
  InvalidContent : text;
  InvalidRequest : text;
};
type Result = variant { Ok; Err : InitError };
type Result_1 = variant { Ok; Err : text };
service : {
  get_last_snapshot : () -> (text) query;
  get_snapshot : (nat64) -> (text) query;
  get_snapshots : () -> (vec text) query;
  get_top_snapshots : (nat64) -> (vec text) query;
  greet : (text) -> (text) query;
  init_in : (Env) -> (Result);
  insert_snapshot : (text) -> (Result_1);
  proxy_get_last_snapshot : (vec nat8) -> (vec nat8);
  proxy_get_snapshot : (vec nat8) -> (vec nat8);
  proxy_get_snapshots : (vec nat8) -> (vec nat8);
  proxy_get_top_snapshots : (vec nat8) -> (vec nat8);
  proxy_snapshots_len : (vec nat8) -> (vec nat8);
  snapshots_len : () -> (nat64) query;
}